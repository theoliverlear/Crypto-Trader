server:
  port: 8085

spring:
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    properties:
      # Real batching
      hibernate.generate_statistics: false
      hibernate.jdbc.use_get_generated_keys: true
      # Prevent surprise auto-flushes
      hibernate.flushMode: COMMIT
      hibernate.jdbc.batch_size: 1000
      hibernate.order_updates: true
      hibernate.jdbc.batch_versioned_data: true
      hibernate.order_inserts: true
      hibernate.batch_versioned_data: true
      hibernate.jdbc.use_scrollable_resultset: false
      hibernate.jdbc.use_streams_for_binary: false
  datasource:
    hikari:
      maximum-pool-size: 20
      minimum-idle: 4
      connection-timeout: 10000
      # ⬇️ Apply async commit once per connection (no per-tick native query)
      connection-init-sql: "set synchronous_commit = off"
      # Optional: this warning is what you saw; raise or disable during startup
      leak-detection-threshold: 0  # set 0 to disable
      auto-commit: false
  task:
    scheduling:
      pool:
        size: 4
#  cloud:
#    stream:
#      function:
#        sanitizing:
#          enabled: false
#      defaultBinder: kafka
#      bindings: # Outbound (publisher example)
#              exampleEvent-out-0:
#                destination: ct.example.v1
#                contentType: application/json
#      
#              # Inbound (subscriber example)
#              exampleEvent-in-0:
#                destination: ct.example.v1
#                group: ${spring.application.name}
#                contentType: application/json
#      kafka:
#        binder:
#          brokers: localhost:9092
#        bindings:
#          exampleEvent-in-0:
#            consumer:
#              enableDlq: true
#              dlqName: ct.example.v1.DLT
  application:
    name: crypto-trader-data
management:
  endpoints.web.exposure.include: health,info
#logging:
#  level:
#    org.hibernate.SQL: DEBUG
#    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
