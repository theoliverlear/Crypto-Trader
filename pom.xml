<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.cryptotrader</groupId>
    <artifactId>crypto-trader</artifactId>
    <version>0.2.2</version>
    <packaging>pom</packaging>
    <name>Crypto-Trader</name>
    <description>
        Multi-module platform for automated cryptocurrency trading: Spring Boot services, JavaFX admin, shared libraries,
        docs, testing, and developer tooling. See the top-level README for architecture and usage.
    </description>
    <url>https://github.com/theoliverlear/Crypto-Trader</url>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.5</version>
        <relativePath/>
    </parent>

    <licenses>
        <license>
            <name>Sigwarth Software License</name>
            <url>https://raw.githubusercontent.com/theoliverlear/Crypto-Trader/HEAD/LICENSE.md</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>theoliverlear</id>
            <name>Oliver Lear Sigwarth</name>
            <email>sigwarthsoftware@gmail.com</email>
            <organization>Sigwarth Software</organization>
            <organizationUrl>https://github.com/theoliverlear</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/theoliverlear/Crypto-Trader.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/theoliverlear/Crypto-Trader.git</developerConnection>
        <url>https://github.com/theoliverlear/Crypto-Trader</url>
        <tag>HEAD</tag>
    </scm>

    <modules>
        <module>Crypto-Trader-Api</module>
        <module>Crypto-Trader-Admin</module>
        <module>Crypto-Trader-Library</module>
        <module>Crypto-Trader-Assets</module>
        <module>Crypto-Trader-Testing</module>
        <module>Crypto-Trader-Version</module>
        <module>Crypto-Trader-Engine</module>
        <module>Crypto-Trader-Data</module>
        <module>Crypto-Trader-Logging</module>
        <module>Crypto-Trader-Docs</module>
        <module>Crypto-Trader-Coverage</module>
        <module>Crypto-Trader-Health</module>
        <module>Crypto-Trader-Contact</module>
        <module>Crypto-Trader-Console</module>
        <module>Crypto-Trader-Security</module>
        <module>Crypto-Trader-Simulator</module>
    </modules>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>23</java.version>
        <maven.compiler.release>23</maven.compiler.release>
        <junit-jupiter.version>5.10.2</junit-jupiter.version>
        <assertj.version>3.25.3</assertj.version>
        <mockito.version>5.11.0</mockito.version>
        <testcontainers.version>1.20.1</testcontainers.version>
        <!-- Default main class for generating OpenAPI docs; can be overridden with -Ddocs.mainClass=... -->
        <docs.mainClass>org.cryptotrader.api.CryptoTraderApiApplication</docs.mainClass>
        <argLine/>
        <surefireArgLine/>
        <jacoco.version>0.8.12</jacoco.version>
        <surefire.version>3.2.5</surefire.version>
        <failsafe.version>3.2.5</failsafe.version>
        <skipDokka>false</skipDokka>
        <skipJavadoc>true</skipJavadoc>
        <surefire.forkedProcessTimeoutInSeconds>180</surefire.forkedProcessTimeoutInSeconds>
        <surefire.skipAfterFailureCount>1</surefire.skipAfterFailureCount>
        <!-- Default: exclude Docker-tagged tests to allow builds without Docker -->
        <junit.platform.excludeTags>docker</junit.platform.excludeTags>
        <!-- Coverage thresholds (defaults allow build to pass; enable enforcement with -Dcoverage.check.skip=false) -->
        <coverage.check.skip>true</coverage.check.skip>
        <coverage.line.min>0.00</coverage.line.min>
        <coverage.branch.min>0.00</coverage.branch.min>
        <coverage.instruction.min>0.00</coverage.instruction.min>

        <!-- JaCoCo defaults -->
        <jacoco.skip>false</jacoco.skip>
        <jacoco.ut.exec>${project.build.directory}/jacoco.exec</jacoco.ut.exec>
        <jacoco.it.exec>${project.build.directory}/jacoco-it.exec</jacoco.it.exec>
        <!-- Centralized JavaFX version for all desktop modules -->
        <javafx.version>21.0.6</javafx.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- ===== Platform BOMs (imported) ===== -->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>2025.0.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>2.19.2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- ===== Testing libraries (JUnit, AssertJ, Mockito, GreenMail, internal testing) ===== -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit-jupiter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>com.icegreen</groupId>
                <artifactId>greenmail</artifactId>
                <version>2.1.2</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>crypto-trader-testing</artifactId>
                <version>0.0.4</version>
            </dependency>

            <!-- ===== Kotlin/JetBrains alignment ===== -->
            <!-- Align JetBrains annotations across all modules to satisfy enforcer dependency convergence -->
            <dependency>
                <groupId>org.jetbrains</groupId>
                <artifactId>annotations</artifactId>
                <version>23.0.0</version>
            </dependency>
            <!-- Align Kotlin libs across modules to satisfy enforcer dependency convergence -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>2.2.0</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>2.2.0</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-test-junit5</artifactId>
                <version>2.2.0</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-test</artifactId>
                <version>2.2.0</version>
            </dependency>

            <!-- ===== Logging ===== -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>2.0.13</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>2.0.13</version>
            </dependency>
            <dependency>
                <groupId>io.github.oshai</groupId>
                <artifactId>kotlin-logging-jvm</artifactId>
                <version>5.1.0</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.2</version>
            </dependency>

            <!-- ===== HTTP/Web/OpenAPI ===== -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.5.14</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents.client5</groupId>
                <artifactId>httpclient5</artifactId>
                <version>5.3.1</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>2.8.9</version>
            </dependency>

            <!-- ===== JSON/XML/YAML & Config ===== -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>2.19.2</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>2.19.2</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>2.2</version>
            </dependency>
            <dependency>
                <groupId>org.jdom</groupId>
                <artifactId>jdom2</artifactId>
                <version>2.0.6.1</version>
            </dependency>
            <dependency>
                <groupId>com.moandjiezana.toml</groupId>
                <artifactId>toml4j</artifactId>
                <version>0.7.2</version>
            </dependency>
            <!-- Align legacy xml-apis across all modules to satisfy enforcer dependency convergence -->
            <dependency>
                <groupId>xml-apis</groupId>
                <artifactId>xml-apis</artifactId>
                <version>1.3.04</version>
            </dependency>

            <!-- ===== Security (libraries and internal security suite) ===== -->
            <dependency>
                <groupId>com.google.crypto.tink</groupId>
                <artifactId>tink</artifactId>
                <version>1.13.0</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>crypto-trader-security</artifactId>
                <version>0.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>security-config</artifactId>
                <version>0.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>security-events</artifactId>
                <version>0.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>security-infrastructure</artifactId>
                <version>0.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>security-models</artifactId>
                <version>0.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>security-repositories</artifactId>
                <version>0.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>security-services</artifactId>
                <version>0.0.1</version>
            </dependency>

            <!-- ===== JavaFX (core platform and ecosystem) ===== -->
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-controls</artifactId>
                <version>${javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-fxml</artifactId>
                <version>${javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-web</artifactId>
                <version>${javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-swing</artifactId>
                <version>${javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric.centerdevice</groupId>
                <artifactId>javafxsvg</artifactId>
                <version>1.3.0</version>
            </dependency>
            <dependency>
                <groupId>net.raumzeitfalle.fx</groupId>
                <artifactId>scenic-view</artifactId>
                <version>11.0.2</version>
            </dependency>
            <dependency>
                <groupId>net.rgielen</groupId>
                <artifactId>javafx-weaver-spring-boot-starter</artifactId>
                <version>2.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.controlsfx</groupId>
                <artifactId>controlsfx</artifactId>
                <version>11.2.1</version>
            </dependency>
            <dependency>
                <groupId>com.dlsc.formsfx</groupId>
                <artifactId>formsfx-core</artifactId>
                <version>11.6.0</version>
            </dependency>
            <dependency>
                <groupId>net.synedra</groupId>
                <artifactId>validatorfx</artifactId>
                <version>0.6.1</version>
            </dependency>
            <dependency>
                <groupId>org.kordamp.ikonli</groupId>
                <artifactId>ikonli-javafx</artifactId>
                <version>12.3.1</version>
            </dependency>
            <dependency>
                <groupId>org.kordamp.bootstrapfx</groupId>
                <artifactId>bootstrapfx-core</artifactId>
                <version>0.4.0</version>
            </dependency>
            <dependency>
                <groupId>eu.hansolo</groupId>
                <artifactId>tilesfx</artifactId>
                <version>21.0.9</version>
            </dependency>
            <dependency>
                <groupId>fr.brouillard.oss</groupId>
                <artifactId>cssfx</artifactId>
                <version>11.5.0</version>
            </dependency>
            <dependency>
                <groupId>org.reactfx</groupId>
                <artifactId>reactfx</artifactId>
                <version>2.0-M5</version>
            </dependency>

            <!-- ===== Databases & CLI ===== -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>2.2.224</version>
            </dependency>
            <dependency>
                <groupId>info.picocli</groupId>
                <artifactId>picocli</artifactId>
                <version>4.7.6</version>
            </dependency>

            <!-- ===== Parsing ===== -->
            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-runtime</artifactId>
                <version>4.13.2</version>
            </dependency>

            <!-- ===== Jakarta XML Binding (JAXB) ===== -->
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>4.0.2</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <version>4.0.5</version>
            </dependency>
            <!--            <dependency>-->
            <!--                <groupId>jakarta.activation</groupId>-->
            <!--                <artifactId>jakarta.activation-api</artifactId>-->
            <!--                <version>2.1.3</version>-->
            <!--            </dependency>-->

            <!-- ===== Spring baseline and common utilities ===== -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>6.2.10</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.20.0</version>
            </dependency>

            <!-- ===== Code quality & annotations ===== -->
            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>2.38.0</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.18.36</version>
            </dependency>
            <dependency>
                <groupId>com.github.seancfoley</groupId>
                <artifactId>ipaddress</artifactId>
                <version>5.4.0</version>
            </dependency>

            <!-- ===== Sigwarth Software Suite artifacts ===== -->
            <dependency>
                <groupId>com.sigwarthsoftware</groupId>
                <artifactId>changelog-suite</artifactId>
                <version>0.0.5</version>
            </dependency>
            <dependency>
                <groupId>com.sigwarthsoftware</groupId>
                <artifactId>spring-boot-websocket</artifactId>
                <version>0.0.14</version>
            </dependency>

            <!-- ===== Internal Crypto-Trader modules (grouped by domain) ===== -->
            <!-- Core applications (used by Coverage) -->
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>crypto-trader-admin</artifactId>
                <version>0.0.4</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>crypto-trader-api</artifactId>
                <version>0.0.6</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>api-infrastructure</artifactId>
                <version>0.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>crypto-trader-data</artifactId>
                <version>0.0.3</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>crypto-trader-engine</artifactId>
                <version>0.0.3</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>crypto-trader-contact</artifactId>
                <version>0.0.2</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>crypto-trader-version</artifactId>
                <version>0.1.1</version>
            </dependency>

            <!-- API domain -->
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>api-config</artifactId>
                <version>0.0.2</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>api-events</artifactId>
                <version>0.0.2</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>api-library</artifactId>
                <version>0.0.5</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>api-models</artifactId>
                <version>0.0.6</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>api-repositories</artifactId>
                <version>0.0.5</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>api-communication</artifactId>
                <version>0.0.5</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>api-services</artifactId>
                <version>0.0.3</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>api-components</artifactId>
                <version>0.0.5</version>
            </dependency>

            <!-- Admin domain -->
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>admin-models</artifactId>
                <version>0.0.2</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>admin-events</artifactId>
                <version>0.0.2</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>admin-library</artifactId>
                <version>0.0.2</version>
            </dependency>

            <!-- Contact domain -->
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>contact-events</artifactId>
                <version>0.0.2</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>contact-models</artifactId>
                <version>0.0.2</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>contact-repositories</artifactId>
                <version>0.0.2</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>contact-library</artifactId>
                <version>0.0.2</version>
            </dependency>

            <!-- Desktop/Versioning/Assets/Externals -->
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>desktop-library</artifactId>
                <version>0.0.3</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>desktop-components</artifactId>
                <version>0.0.3</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>crypto-trader-assets</artifactId>
                <version>0.0.4</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>externals-library</artifactId>
                <version>0.0.3</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>version-library</artifactId>
                <version>0.0.3</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>version-models</artifactId>
                <version>0.0.3</version>
            </dependency>

            <!-- Other internal tools & docs -->
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>crypto-trader-console</artifactId>
                <version>0.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>crypto-trader-logging</artifactId>
                <version>0.0.3</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>crypto-trader-docs</artifactId>
                <version>0.0.3</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>crypto-trader-health</artifactId>
                <version>0.0.2</version>
            </dependency>


            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>0.12.5</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>0.12.5</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>0.12.5</version>
                <scope>runtime</scope>
            </dependency>
            <!-- Simpler, readable JWT builder/verifier -->
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>4.2.1</version>
            </dependency>
            <dependency>
                <groupId>org.cryptotrader</groupId>
                <artifactId>security-library</artifactId>
                <version>0.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>3.5.5</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- JUnit Platform Suite engine to make root-level suite runnable in IDE -->
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-suite</artifactId>
                <version>1.10.2</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>Maven Central</name>
            <url>https://repo.maven.apache.org/maven2</url>
        </pluginRepository>
        <pluginRepository>
            <id>jetbrains-dokka</id>
            <name>JetBrains Dokka Repository</name>
            <url>https://maven.pkg.jetbrains.space/kotlin/p/dokka/maven</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <!-- ===== Test runtime dependencies for all modules ===== -->
        <!-- Ensure all modules have JUnit 5 on the test classpath for IDE 'Run All Tests' -->
    </dependencies>

    <build>
        <plugins>
            <!-- Ensure Maven reporting plugins (like JaCoCo) know about Kotlin source roots -->

            <plugin>
                <groupId>org.jetbrains.dokka</groupId>
                <artifactId>dokka-maven-plugin</artifactId>
                <version>1.9.20</version>
                <inherited>true</inherited>
<!--                Addition that may be buggy-->
                <executions>
                    <execution>
                        <id>dokka-html</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>dokka</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <outputDir>${project.build.directory}/dokka-html</outputDir>
                    <dokkaPlugins>
                        <plugin>
                            <groupId>org.jetbrains.dokka</groupId>
                            <artifactId>dokka-base</artifactId>
                            <version>1.9.20</version>
                        </plugin>
                    </dokkaPlugins>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!--                Addition that may be buggy-->
                <version>3.2.5</version>
                <configuration>
                    <useModulePath>true</useModulePath>
                    <argLine>@{argLine} -Dfile.encoding=UTF-8 -XX:+EnableDynamicAgentLoading</argLine>
                    <environmentVariables>
                        <TESTCONTAINERS_DISABLED>true</TESTCONTAINERS_DISABLED>
                        <TESTCONTAINERS_RYUK_DISABLED>true</TESTCONTAINERS_RYUK_DISABLED>
                        <TESTCONTAINERS_CHECKS_DISABLE>true</TESTCONTAINERS_CHECKS_DISABLE>
                    </environmentVariables>
                    <systemPropertyVariables>
                        <junit.platform.excludeTags>${junit.platform.excludeTags}</junit.platform.excludeTags>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <environmentVariables>
                        <TESTCONTAINERS_DISABLED>true</TESTCONTAINERS_DISABLED>
                        <TESTCONTAINERS_RYUK_DISABLED>true</TESTCONTAINERS_RYUK_DISABLED>
                        <TESTCONTAINERS_CHECKS_DISABLE>true</TESTCONTAINERS_CHECKS_DISABLE>
                    </environmentVariables>
                    <systemPropertyVariables>
                        <junit.platform.excludeTags>${junit.platform.excludeTags}</junit.platform.excludeTags>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>enforce-jdk-and-deps</id>
                        <goals><goal>enforce</goal></goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>[23,)</version>
                                </requireJavaVersion>
                                <banDuplicatePomDependencyVersions/>
                                <dependencyConvergence/>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>jacoco-prepare-ut</id>
                        <goals><goal>prepare-agent</goal></goals>
                        <configuration>
                            <destFile>${jacoco.ut.exec}</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-prepare-it</id>
                        <goals><goal>prepare-agent-integration</goal></goals>
                        <configuration>
                            <destFile>${jacoco.it.exec}</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-report-ut</id>
                        <phase>verify</phase>
                        <goals><goal>report</goal></goals>
                        <configuration>
                            <dataFile>${jacoco.ut.exec}</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                            <formats>
                                <format>XML</format>
                                <format>HTML</format>
                            </formats>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-report-it</id>
                        <phase>verify</phase>
                        <goals><goal>report-integration</goal></goals>
                        <configuration>
                            <dataFile>${jacoco.it.exec}</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                            <formats>
                                <format>XML</format>
                                <format>HTML</format>
                            </formats>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-aggregate</id>
                        <phase>verify</phase>
                        <inherited>false</inherited>
                        <goals><goal>report-aggregate</goal></goals>
                        <configuration>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
                            <formats>
                                <format>XML</format>
                                <format>HTML</format>
                            </formats>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


    <distributionManagement>
        <repository>
            <id>github</id>
            <name>GitHub Packages - Crypto-Trader</name>
            <url>https://maven.pkg.github.com/theoliverlear/Crypto-Trader</url>
        </repository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
        <repository>
            <id>central-1</id>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
        <repository>
            <id>jetbrains-dokka</id>
            <name>JetBrains Dokka Repository</name>
            <url>https://maven.pkg.jetbrains.space/kotlin/p/dokka/maven</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <!-- Prefer Sigwarth Suite first so com.sigwarthsoftware artifacts resolve from the correct repository -->
        <repository>
            <id>gh-sigwarth-suite</id>
            <name>GitHub Packages - Sigwarth-Software-Suite</name>
            <url>https://maven.pkg.github.com/theoliverlear/Sigwarth-Software-Suite</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>gh-crypto-trader</id>
            <name>GitHub Packages - Crypto-Trader</name>
            <url>https://maven.pkg.github.com/theoliverlear/Crypto-Trader</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <id>coverage</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                </plugins>
            </build>

            <properties>
                <skipITs>true</skipITs>
                <maven.test.skip>false</maven.test.skip>
                <failIfNoTests>false</failIfNoTests>
                <surefire.skipAfterFailureCount>1</surefire.skipAfterFailureCount>
                <surefire.forkedProcessTimeoutInSeconds>180</surefire.forkedProcessTimeoutInSeconds>
                <spring.test.log.level>WARN</spring.test.log.level>
            </properties>
        </profile>
        <profile>
            <id>include-its</id>
            <activation>
                <property>
                    <name>includeITs</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <skipITs>false</skipITs>
                <failsafe.skipITs>false</failsafe.skipITs>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${failsafe.version}</version>
                        <configuration>
                            <forkedProcessTimeoutInSeconds>180</forkedProcessTimeoutInSeconds>
                            <skipITs>false</skipITs>
                            <argLine>${surefireArgLine} ${argLine} -Dfile.encoding=UTF-8 -XX:+EnableDynamicAgentLoading</argLine>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-tests</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>with-docker</id>
            <properties>
                <!-- Include docker-tagged tests when this profile is active -->
                <junit.platform.excludeTags></junit.platform.excludeTags>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <environmentVariables>
                                <TESTCONTAINERS_DISABLED>false</TESTCONTAINERS_DISABLED>
                                <TESTCONTAINERS_RYUK_DISABLED>false</TESTCONTAINERS_RYUK_DISABLED>
                                <TESTCONTAINERS_CHECKS_DISABLE>false</TESTCONTAINERS_CHECKS_DISABLE>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <environmentVariables>
                                <TESTCONTAINERS_DISABLED>false</TESTCONTAINERS_DISABLED>
                                <TESTCONTAINERS_RYUK_DISABLED>false</TESTCONTAINERS_RYUK_DISABLED>
                                <TESTCONTAINERS_CHECKS_DISABLE>false</TESTCONTAINERS_CHECKS_DISABLE>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>