server:
  port: 8080
spring:
  application:
    name: crypto-trader-api
  web:
    resources:
      cache:
        cachecontrol:
          max-age: 0s
  devtools:
    restart:
      poll-interval: 2s
      enabled: false
      additional-paths: "src/main/java,src/main/resources"
      exclude: ""
    livereload:
      enabled: false
  thymeleaf:
    cache: false
  freemarker:
    cache: false
  datasource:
    url: ${PSQL_DB_URL}
    username: ${PSQL_USER}
    password: ${PSQL_PW}
    generate-unique-name: false
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  cloud:
    stream:
      defaultBinder: kafka
      bindings:
        userRegistered-out-0:
          destination: ct.user.registered.v1
          contentType: application/json
        contactCreated-out-0:
          destination: ct.contact.created.v1
          contentType: application/json
        contactCreated-in-0:
          destination: ct.contact.created.v1
          group: ${spring.application.name}
          contentType: application/json

        orderFilled-out-0:
          destination: ct.order.filled.v1
          contentType: application/json
        orderFilled-in-0:
          destination: ct.order.filled.v1
          group: ${spring.application.name}
          contentType: application/json
      kafka:
        binder:
          brokers: localhost:9092
        bindings:
          contactCreated-in-0:
            consumer:
              enableDlq: true
              dlqName: ct.contact.created.v1.DLT
          orderFilled-in-0:
            consumer:
              enableDlq: true
              dlqName: ct.order.filled.v1.DLT
logging:
  level:
    org:
      springframework: INFO
      springframework.web: INFO
      springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
management:
  endpoints:
    web:
      exposure:
        include: "health,info"
