ALTER TABLE currency_history
    ALTER COLUMN last_updated SET NOT NULL;

ALTER TABLE currency_history
    RENAME TO currency_history_old;

CREATE TABLE currency_history
(
    id                       bigint GENERATED BY DEFAULT AS IDENTITY,
    currency_value_formatted varchar(255),
    last_updated             timestamp(6) NOT NULL,
    currency_name            varchar(255),
    currency_value           numeric(34,18),
    currency_code            varchar(255) NOT NULL
        REFERENCES currencies
)
    PARTITION BY RANGE (last_updated);

COMMIT;

DO
$$
    DECLARE
        start_ts date := date_trunc(
                'month',
                (SELECT min(last_updated) FROM currency_history_old)
                         );
        end_ts   date := date_trunc(
                                 'month',
                                 (SELECT max(last_updated) FROM currency_history_old)
                         ) + interval '1 month';
    BEGIN
        WHILE start_ts < end_ts LOOP
                EXECUTE format(
                        'CREATE TABLE IF NOT EXISTS currency_history_%s PARTITION OF currency_history
                           FOR VALUES FROM (%L) TO (%L);',
                        to_char(start_ts, 'YYYY_MM'),
                        start_ts,
                        start_ts + interval '1 month'
                        );

                start_ts := start_ts + interval '1 month';
            END LOOP;
    END;
$$ LANGUAGE plpgsql;

INSERT INTO currency_history
SELECT * FROM currency_history_old;

CREATE TABLE currency_history_default PARTITION OF currency_history DEFAULT;

DO
$$
    DECLARE
        month_start date := date_trunc('month', current_date);
        month_end   date := month_start + interval '12 months';
    BEGIN
        WHILE month_start < month_end LOOP
                EXECUTE format(
                        'CREATE TABLE IF NOT EXISTS currency_history_%s
                           PARTITION OF currency_history
                           FOR VALUES FROM (%L) TO (%L);',
                        to_char(month_start, 'YYYY_MM'),
                        month_start,
                        month_start + interval '1 month'
                        );

                month_start := month_start + interval '1 month';
            END LOOP;
    END;
$$ LANGUAGE plpgsql;

CREATE INDEX idx_currency_history_code_ts_desc_inc_val
    ON currency_history (currency_code, last_updated DESC)
    INCLUDE (currency_value);

ANALYZE currency_history;
