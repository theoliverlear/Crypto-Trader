<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.cryptotrader</groupId>
        <artifactId>crypto-trader</artifactId>
        <version>0.2.1</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>crypto-trader-docs</artifactId>
    <name>Crypto-Trader-Docs</name>
    <version>0.0.2</version>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Docs properties can be overridden via -D on CLI -->
        <docs.openapi.filename>openapi</docs.openapi.filename>
        <docs.openapi.format>yaml</docs.openapi.format>
        <docs.openapi.outputDir>${project.build.directory}</docs.openapi.outputDir>
        <docs.site.specPath>${project.basedir}/docs/api/openapi.yaml</docs.site.specPath>
        <!-- Default to skipping OpenAPI generation unless explicitly enabled -->
        <docs.skipOpenapi>true</docs.skipOpenapi>
    </properties>

    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>Maven Central</name>
            <url>https://repo.maven.apache.org/maven2</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <!-- Bring SpringDoc UI transitively so any app importing this gets /swagger-ui and /v3/api-docs -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.6.0</version>
        </dependency>
        <!-- Autoconfiguration support -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <!-- For @Conditional annotations, Environment, etc. -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <!-- Optional: metadata for configuration properties in IDEs -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Generate OpenAPI from a running API instance -->
            <plugin>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-maven-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>generate-openapi</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <apiDocsUrl>http://localhost:18080/v3/api-docs.yaml</apiDocsUrl>
                            <outputFileName>${docs.openapi.filename}.${docs.openapi.format}</outputFileName>
                            <outputDir>${docs.openapi.outputDir}</outputDir>
                            <skip>${docs.skipOpenapi}</skip>
                            <failOnError>false</failOnError>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Stage per-module READMEs and Dokka outputs, then copy into docs/reference and remove placeholder index.md files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <!-- Stage module READMEs and Dokka outputs into target/staging/reference -->
                    <execution>
                        <id>stage-reference</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <property name="staging.dir" value="${project.build.directory}/staging/reference"/>
                                <property name="repo.root" location="${project.basedir}/.."/>
                                <mkdir dir="${staging.dir}"/>

                                <!-- Api module -->
                                <mkdir dir="${staging.dir}/Api"/>
                                <echo file="${staging.dir}/Api/README.md"># Api&#10;&#10;This module does not have a README.md yet.</echo>
                                <mkdir dir="${staging.dir}/Api/api"/>
                                <echo file="${staging.dir}/Api/api/index.md"><![CDATA[# API Reference

<div class="api-embed"><iframe src="index.html" title="Dokka API" style="width:100%;height:calc(100vh - var(--md-header-height, 3.2rem));border:0;"></iframe></div>]]></echo>
                                <copy file="${repo.root}/Crypto-Trader-Api/README.md" tofile="${staging.dir}/Api/README.md" overwrite="true" failonerror="false"/>
                                <copy todir="${staging.dir}/Api/api" overwrite="true" failonerror="false">
                                    <fileset dir="${repo.root}/Crypto-Trader-Api/target/dokka-html" erroronmissingdir="false"/>
                                </copy>

                                <!-- Admin module -->
                                <mkdir dir="${staging.dir}/Admin"/>
                                <echo file="${staging.dir}/Admin/README.md"># Admin&#10;&#10;This module does not have a README.md yet.</echo>
                                <mkdir dir="${staging.dir}/Admin/api"/>
                                <echo file="${staging.dir}/Admin/api/index.md"><![CDATA[# API Reference

<div class="api-embed"><iframe src="index.html" title="Dokka API" style="width:100%;height:calc(100vh - var(--md-header-height, 3.2rem));border:0;"></iframe></div>]]></echo>
                                <copy file="${repo.root}/Crypto-Trader-Admin/README.md" tofile="${staging.dir}/Admin/README.md" overwrite="true" failonerror="false"/>
                                <copy todir="${staging.dir}/Admin/api" overwrite="true" failonerror="false">
                                    <fileset dir="${repo.root}/Crypto-Trader-Admin/target/dokka-html" erroronmissingdir="false"/>
                                </copy>

                                <!-- Assets module -->
                                <mkdir dir="${staging.dir}/Assets"/>
                                <echo file="${staging.dir}/Assets/README.md"># Assets&#10;&#10;This module does not have a README.md yet.</echo>
                                <mkdir dir="${staging.dir}/Assets/api"/>
                                <echo file="${staging.dir}/Assets/api/index.md"><![CDATA[# API Reference

<div class="api-embed"><iframe src="index.html" title="Dokka API" style="width:100%;height:calc(100vh - var(--md-header-height, 3.2rem));border:0;"></iframe></div>]]></echo>
                                <copy file="${repo.root}/Crypto-Trader-Assets/README.md" tofile="${staging.dir}/Assets/README.md" overwrite="true" failonerror="false"/>
                                <copy todir="${staging.dir}/Assets/api" overwrite="true" failonerror="false">
                                    <fileset dir="${repo.root}/Crypto-Trader-Assets/target/dokka-html" erroronmissingdir="false"/>
                                </copy>

                                <!-- Data module -->
                                <mkdir dir="${staging.dir}/Data"/>
                                <echo file="${staging.dir}/Data/README.md"># Data&#10;&#10;This module does not have a README.md yet.</echo>
                                <mkdir dir="${staging.dir}/Data/api"/>
                                <echo file="${staging.dir}/Data/api/index.md"><![CDATA[# API Reference

<div class="api-embed"><iframe src="index.html" title="Dokka API" style="width:100%;height:calc(100vh - var(--md-header-height, 3.2rem));border:0;"></iframe></div>]]></echo>
                                <copy file="${repo.root}/Crypto-Trader-Data/README.md" tofile="${staging.dir}/Data/README.md" overwrite="true" failonerror="false"/>
                                <copy todir="${staging.dir}/Data/api" overwrite="true" failonerror="false">
                                    <fileset dir="${repo.root}/Crypto-Trader-Data/target/dokka-html" erroronmissingdir="false"/>
                                </copy>

                                <!-- Engine module -->
                                <mkdir dir="${staging.dir}/Engine"/>
                                <echo file="${staging.dir}/Engine/README.md"># Engine&#10;&#10;This module does not have a README.md yet.</echo>
                                <mkdir dir="${staging.dir}/Engine/api"/>
                                <echo file="${staging.dir}/Engine/api/index.md"><![CDATA[# API Reference

<div class="api-embed"><iframe src="index.html" title="Dokka API" style="width:100%;height:calc(100vh - var(--md-header-height, 3.2rem));border:0;"></iframe></div>]]></echo>
                                <copy file="${repo.root}/Crypto-Trader-Engine/README.md" tofile="${staging.dir}/Engine/README.md" overwrite="true" failonerror="false"/>
                                <copy todir="${staging.dir}/Engine/api" overwrite="true" failonerror="false">
                                    <fileset dir="${repo.root}/Crypto-Trader-Engine/target/dokka-html" erroronmissingdir="false"/>
                                </copy>

                                <!-- Library module -->
                                <mkdir dir="${staging.dir}/Library"/>
                                <echo file="${staging.dir}/Library/README.md"># Library&#10;&#10;This module does not have a README.md yet.</echo>
                                <mkdir dir="${staging.dir}/Library/api"/>
                                <echo file="${staging.dir}/Library/api/index.md"><![CDATA[# API Reference

<div class="api-embed"><iframe src="index.html" title="Dokka API" style="width:100%;height:calc(100vh - var(--md-header-height, 3.2rem));border:0;"></iframe></div>]]></echo>
                                <copy file="${repo.root}/Crypto-Trader-Library/README.md" tofile="${staging.dir}/Library/README.md" overwrite="true" failonerror="false"/>
                                <copy todir="${staging.dir}/Library/api" overwrite="true" failonerror="false">
                                    <fileset dir="${repo.root}/Crypto-Trader-Library/target/dokka-html" erroronmissingdir="false"/>
                                </copy>

                                <!-- Logging module -->
                                <mkdir dir="${staging.dir}/Logging"/>
                                <echo file="${staging.dir}/Logging/README.md"># Logging&#10;&#10;This module does not have a README.md yet.</echo>
                                <mkdir dir="${staging.dir}/Logging/api"/>
                                <echo file="${staging.dir}/Logging/api/index.md"><![CDATA[# API Reference

<div class="api-embed"><iframe src="index.html" title="Dokka API" style="width:100%;height:calc(100vh - var(--md-header-height, 3.2rem));border:0;"></iframe></div>]]></echo>
                                <copy file="${repo.root}/Crypto-Trader-Logging/README.md" tofile="${staging.dir}/Logging/README.md" overwrite="true" failonerror="false"/>
                                <copy todir="${staging.dir}/Logging/api" overwrite="true" failonerror="false">
                                    <fileset dir="${repo.root}/Crypto-Trader-Logging/target/dokka-html" erroronmissingdir="false"/>
                                </copy>

                                <!-- Testing module -->
                                <mkdir dir="${staging.dir}/Testing"/>
                                <echo file="${staging.dir}/Testing/README.md"># Testing&#10;&#10;This module does not have a README.md yet.</echo>
                                <mkdir dir="${staging.dir}/Testing/api"/>
                                <echo file="${staging.dir}/Testing/api/index.md"><![CDATA[# API Reference

<div class="api-embed"><iframe src="index.html" title="Dokka API" style="width:100%;height:calc(100vh - var(--md-header-height, 3.2rem));border:0;"></iframe></div>]]></echo>
                                <copy file="${repo.root}/Crypto-Trader-Testing/README.md" tofile="${staging.dir}/Testing/README.md" overwrite="true" failonerror="false"/>
                                <copy todir="${staging.dir}/Testing/api" overwrite="true" failonerror="false">
                                    <fileset dir="${repo.root}/Crypto-Trader-Testing/target/dokka-html" erroronmissingdir="false"/>
                                </copy>

                                <!-- Version module -->
                                <mkdir dir="${staging.dir}/Version"/>
                                <echo file="${staging.dir}/Version/README.md"># Version&#10;&#10;This module does not have a README.md yet.</echo>
                                <mkdir dir="${staging.dir}/Version/api"/>
                                <echo file="${staging.dir}/Version/api/index.md"><![CDATA[# API Reference

<div class="api-embed"><iframe src="index.html" title="Dokka API" style="width:100%;height:calc(100vh - var(--md-header-height, 3.2rem));border:0;"></iframe></div>]]></echo>
                                <copy file="${repo.root}/Crypto-Trader-Version/README.md" tofile="${staging.dir}/Version/README.md" overwrite="true" failonerror="false"/>
                                <copy todir="${staging.dir}/Version/api" overwrite="true" failonerror="false">
                                    <fileset dir="${repo.root}/Crypto-Trader-Version/target/dokka-html" erroronmissingdir="false"/>
                                </copy>
                            </target>
                        </configuration>
                    </execution>

                    <!-- Copy staged reference into docs/reference -->
                    <execution>
                        <id>copy-reference-into-docs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <delete dir="${project.basedir}/docs/reference" quiet="true"/>
                                <mkdir dir="${project.basedir}/docs/reference"/>
                                <copy todir="${project.basedir}/docs/reference" overwrite="true" failonerror="false">
                                    <fileset dir="${project.build.directory}/staging/reference" erroronmissingdir="false"/>
                                </copy>
                            </target>
                        </configuration>
                    </execution>

                    <!-- Remove placeholder index.md so MkDocs serves Dokka index.html directly -->
                    <execution>
                        <id>remove-iframe-index-md</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <delete failonerror="false">
                                    <fileset dir="${project.basedir}/docs/reference">
                                        <include>**/api/index.md</include>
                                    </fileset>
                                </delete>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Copy generated OpenAPI into docs/api/openapi.yaml -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>move-openapi-into-docs</id>
                        <phase>verify</phase>
                        <configuration>
                            <skip>${docs.skipOpenapi}</skip>
                            <target>
                                <mkdir dir="${project.basedir}/docs"/>
                                <copy file="${project.build.directory}/${docs.openapi.filename}.${docs.openapi.format}"
                                      tofile="${docs.site.specPath}" overwrite="true"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Clean staged outputs and generated artifacts in docs -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.basedir}/docs/reference</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>${project.build.directory}/staging</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>${project.basedir}/docs</directory>
                            <includes>
                                <include>openapi.yaml</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- Package docs as a distributable zip -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.7.1</version>
                <executions>
                    <execution>
                        <id>package-docs-zip</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>crypto-trader-docs</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/assembly/docs.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>