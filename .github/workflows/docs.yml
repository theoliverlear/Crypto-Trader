name: Build & Publish Crypto-Trader-Docs

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      pages_enabled: ${{ steps.pages.outcome }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java (23)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '23'
          cache: 'maven'

      - name: Build all modules (install to local repo)
        run: mvn -B -s .github/maven-settings.xml -DskipTests -U clean install

      - name: Generate Dokka for all modules
        run: mvn -B -s .github/maven-settings.xml -DskipTests org.jetbrains.dokka:dokka-maven-plugin:1.9.20:dokka
      

      - name: Start API (docs profile) in background
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          OPENAI_KEY: ${{ secrets.OPENAI_KEY }}
          PSQL_DB_URL: ${{ secrets.PSQL_DB_URL }}
          PSQL_HOST: ${{ secrets.PSQL_HOST }}
          PSQL_PW: ${{ secrets.PSQL_PW }}
          PSQL_USER: ${{ secrets.PSQL_USER }}
          PYTHONUNBUFFERED: ${{ secrets.PYTHONUNBUFFERED }}
          WORLDNEWS_API_KEY: ${{ secrets.WORLDNEWS_API_KEY }}
          X_ACCESS_SECRET: ${{ secrets.X_ACCESS_SECRET }}
          X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
          X_API_KEY: ${{ secrets.X_API_KEY }}
          X_SECRET: ${{ secrets.X_SECRET }}
          REPO_NAME: ${{ secrets.REPO_NAME }}
          APP_NAME: ${{ secrets.APP_NAME }}
        working-directory: .
        run: |
          nohup mvn -B -s .github/maven-settings.xml -DskipTests \
            -f Crypto-Trader-Api/pom.xml -am \
            -Dspring-boot.run.profiles=docs \
            -Dspring-boot.run.arguments=--server.port=18080 \
            spring-boot:run > api.log 2>&1 &
          echo $! > api.pid

      - name: Wait for API to be ready
        working-directory: Crypto-Trader-Api
        run: |
          for i in {1..90}; do
            if curl -fsS http://localhost:18080/v3/api-docs.yaml >/dev/null; then
              echo "API docs are up"; exit 0; fi
            if [ -f ../api.pid ] && ! ps -p $(cat ../api.pid) >/dev/null 2>&1; then
              echo "API process exited early"; break; fi
            sleep 2
          done
          echo "API failed to start; printing full api.log:"
          tail -n +1 ../api.log || true
          exit 1

      - name: Build docs module (generate OpenAPI + copy to docs)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: mvn -B -s .github/maven-settings.xml -DskipTests -Ddocs.skipOpenapi=false -f Crypto-Trader-Docs/pom.xml -N verify

      - name: Stop API
        working-directory: .
        run: |
          if [ -f api.pid ]; then kill "$(cat api.pid)" || true; fi

      - name: Build (runs verify -> javadoc -> copy)
        run: mvn -B -DskipTests verify

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install MkDocs Material
        working-directory: Crypto-Trader-Docs
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material

      - name: Build MkDocs site
        working-directory: Crypto-Trader-Docs
        run: mkdocs build --site-dir site

      - name: Configure Pages
        id: pages
        uses: actions/configure-pages@v5
        continue-on-error: true
        with:
          enablement: true

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: Crypto-Trader-Docs/site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.pages_enabled == 'success'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
